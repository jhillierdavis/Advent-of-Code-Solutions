import pytest

# Local
import solution

@pytest.mark.parametrize(
    "filename,steps,expected",
    [
        pytest.param("puzzle-input-example.txt", 0, "NNCB"),
        pytest.param("puzzle-input-example.txt", 1, "NCNBCHB"),
        pytest.param("puzzle-input-example.txt", 2, "NBCCNBBBCBHCB"),
        pytest.param("puzzle-input-example.txt", 3, "NBBBCNCCNBBNBNBBCHBHHBCHB"),
        pytest.param("puzzle-input-example.txt", 4, "NBBNBNBBCCNBCNCCNBBNBBNBBBNBBNBBCBHCBHHNHCBBCBHCB"),
        #pytest.param("puzzle-input-example.txt
    ],    
)
def test_polymer_propagation_steps(filename, steps, expected):
    assert solution.process_steps(filename, steps) == expected

@pytest.mark.parametrize(
    "filename,expected",
    [
        pytest.param("puzzle-input-example.txt", 1588),
        pytest.param("puzzle-input-full.txt", 2170), 
    ],    
)
def test_part1_solution(filename, expected):
    assert solution.determine_score(filename, 10) == expected

"""
@pytest.mark.parametrize(
    "filename,expected",
    [
        pytest.param("puzzle-input-example.txt", 1588),
        #pytest.param("puzzle-input-full.txt", 2170), 
    ],    
)
def test_part2_solution(filename, expected):
    assert solution.determine_score(filename, 40) == expected    
"""    

"""
@pytest.mark.parametrize(
    "filename,steps,expected",
    [
        #pytest.param("puzzle-input-example.txt", 24, 50331649),
        pytest.param("puzzle-input-example.txt", 25, 100663297),
    ],    
)
def test_polymer_propagation_long_steps(filename, steps, expected):
    result = solution.process_steps(filename, steps)
    assert len(result) == expected
"""    